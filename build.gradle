plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
}

group = 'com.sergeysav'
archivesBaseName = rootProject.name
version = '0.1-SNAPSHOT'

project.ext.lwjglVersion = "3.2.1"
project.ext.jomlVersion = "1.9.11"

project.ext.mainClassName = "com.sergeysav.hexasphere.MainKt"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.lwjgl:lwjgl:$lwjglVersion"
    compile "org.lwjgl:lwjgl-glfw:$lwjglVersion"
    compile "org.lwjgl:lwjgl-opengl:$lwjglVersion"
    compile "org.lwjgl:lwjgl-stb:$lwjglVersion"
    compile "org.lwjgl:lwjgl-nuklear:$lwjglVersion"
    compile "org.joml:joml:${jomlVersion}"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "io.github.microutils:kotlin-logging:1.6.22"
    compile "ch.qos.logback:logback-classic:1.0.13"
    compile "org.lwjgl:lwjgl:$lwjglVersion:natives-windows"
    compile "org.lwjgl:lwjgl:$lwjglVersion:natives-macos"
    compile "org.lwjgl:lwjgl:$lwjglVersion:natives-linux"
    compile "org.lwjgl:lwjgl-glfw:$lwjglVersion:natives-windows"
    compile "org.lwjgl:lwjgl-glfw:$lwjglVersion:natives-macos"
    compile "org.lwjgl:lwjgl-glfw:$lwjglVersion:natives-linux"
    compile "org.lwjgl:lwjgl-opengl:$lwjglVersion:natives-windows"
    compile "org.lwjgl:lwjgl-opengl:$lwjglVersion:natives-macos"
    compile "org.lwjgl:lwjgl-opengl:$lwjglVersion:natives-linux"
    compile "org.lwjgl:lwjgl-stb:$lwjglVersion:natives-windows"
    compile "org.lwjgl:lwjgl-stb:$lwjglVersion:natives-macos"
    compile "org.lwjgl:lwjgl-stb:$lwjglVersion:natives-linux"
    compile "org.lwjgl:lwjgl-nuklear:$lwjglVersion:natives-windows"
    compile "org.lwjgl:lwjgl-nuklear:$lwjglVersion:natives-macos"
    compile "org.lwjgl:lwjgl-nuklear:$lwjglVersion:natives-linux"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

jar {
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes 'Main-Class': "$mainClassName"
    }
}
