import org.gradle.internal.os.OperatingSystem

plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.4'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'application'
}

group = 'com.sergeysav'
archivesBaseName = rootProject.name
version = '0.1-SNAPSHOT'

project.ext.lwjglVersion = "3.2.3"
project.ext.jomlVersion = "1.9.19"
project.ext.includeAllNatives = false

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        def osArch = System.getProperty("os.arch")
        project.ext.currentNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
                ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
                : "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.currentNatives = "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        project.ext.currentNatives = System.getProperty("os.arch").contains("64") ? "natives-windows" : "natives-windows-x86"
        break
}

mainClassName = "com.sergeysav.hexasphere.MainKt"
applicationDefaultJvmArgs = ['-XstartOnFirstThread']

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-nuklear"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-stb"

    implementation "org.joml:joml:${jomlVersion}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "io.github.microutils:kotlin-logging:1.6.22"
    
    runtimeOnly "ch.qos.logback:logback-classic:1.0.13"

    String[] natives = project.ext.includeAllNatives ?
            ["natives-macos", "natives-windows", "natives-windows-x86", "natives-linux", "natives-linux-arm64", "natives-linux-arm32"] :
            [project.ext.currentNatives]
    for (lwjglNatives in natives) {
        runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-nuklear::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
        runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

shadowJar {
    classifier = null
}
